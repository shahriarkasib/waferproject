#---------------------------------------------------------------------
# GitHub Action Workflow to Deploy Flask App to AWS ElasticBeanstalk
#
# Version      Date        Info
# 1.0          2019        Initial Version
###
# Made by Denis Astahov ADV-IT Copyleft (c) 2019
#---------------------------------------------------------------------
name: CI-CD-Pipeline-to-AWS-ElasticBeanstalk
env:
    EB_PACKAGE_S3_BUCKET_NAME: "waferproject3.7"
    EB_APPLICATION_NAME: "Waferproject3.7"
    EB_ENVIRONMENT_NAME: "Waferproject37-env"
    DEPLOY_PACKAGE_NAME: "flask-app-${{ github.sha }}.zip"
    AWS_REGION_NAME: "us-east-1"

on:
  push:
    branches:
      - main

jobs:
    build:
       runs-on: ubuntu-latest

       steps:
         - uses: actions/checkout@v2
           with:
             fetch-depth: 0
         - name: Set up Python 3.7
           uses: actions/setup-python@v2
           with:
             python-version: 3.7
         - name: Install dependencies
           run: |
             python -m pip install --upgrade pip
             pip install flake8 pytest
             if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
         - name: Lint with flake8
           run: |
             # stop the build if there are Python syntax errors or undefined names
             flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
             # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
             flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

         - name: Create ZIP deployment package
           run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./  -x  *.git*

         - name: Configure my AWS Credentils
           uses: aws-actions/configure-aws-credentials@v1
           with:
             aws-access-key-id    : ${{ secrets.MY_AWS_ACCESS_KEY }}
             aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
             aws-region           : ${{ env.AWS_REGION_NAME }}

         - name: Copy our Deployment package to S3 bucket
           run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME}}/

         - name: Print nice message on completion of CI Pipeline
           run : echo "CI Pipeline part finished successfully"

    my_cd_pipeline:
       runs-on: ubuntu-latest
       needs: [build]

       steps:
         - name: Configure my AWS Credentils
           uses: aws-actions/configure-aws-credentials@v1
           with:
             aws-access-key-id    : ${{ secrets.MY_AWS_ACCESS_KEY }}
             aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
             aws-region           : ${{ env.AWS_REGION_NAME }}

         - name: Create new ElasticBeanstalk Applicaiton Version
           run : |
            aws elasticbeanstalk create-application-version \
            --application-name ${{ env.EB_APPLICATION_NAME }} \
            --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
            --version-label "Ver-${{ github.sha }}" \
            --description "CommitSHA-${{ github.sha }}"
         - name: Deploy our new Application Version
           run : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"

         - name: Print nice message on completion of CD Pipeline
           run : echo "CD Pipeline part finished successfully"